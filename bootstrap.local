#!/bin/sh

###################### CONFIG ######################
# Replace path/to/your/root/directory with the directory where you want your local digikam

MYROOT=$HOME/path/to/your/root/directory

# Set to 1 if you want to clean that directory (this script will delete and recreate it)
CLEANROOT=0

# After running this script, do the following to compile and install (replace $MYROOT with the correct value):
# $ cd build
# $ make
# $ make install
# $ mkdir -p $MYROOT/var/tmp/kde-$USER/ksycoca4
# $ KDEDIRS="$MYROOT" KDESYCOCA="$MYROOT/var/tmp/kde-$USER/ksycoca4" kbuildsycoca4

# To run digikam, use the following command (after replacing $MYROOT with the correct path):
# $ KDESYCOCA="$MYROOT/var/tmp/kde-$USER/ksycoca4" KDE_FORK_SLAVES=1 LD_LIBRARY_PATH="$MYROOT/lib64/" KDEDIRS="$MYROOT" $MYROOT/bin/digikam

# For bash users, you can setup a new alias like this at the end of your $HOME/.bashrc :
#   DIGIKAMROOT="$MYROOT"
#   alias digikam-dev="KDESYCOCA='$DIGIKAMROOT/var/tmp/kde-neb/ksycoca4' KDE_FORK_SLAVES=1 LD_LIBRARY_PATH='$DIGIKAMROOT/lib64/' KDEDIRS='$DIGIKAMROOT' $DIGIKAMROOT/bin/digikam"

# The same applies for other binaries in $MYROOT/bin/

###################### END CONFIG ######################

export PATH=$MYROOT/bin:$PATH
export LD_LIBRARY_PATH=$MYROOT/lib:$LD_LIBRARY_PATH
export PKG_CONFIG_PATH=$MYROOT/lib/pkgconfig:/usr/lib/pkgconfig

#export VERBOSE=1
#export CC=gcc4.4
#export CXX=g++4.4

# We will work on command line using GNU Make
export MAKEFILES_TYPE='Unix Makefiles'

# We will work with CodeBlock IDE using MinGW compiler
#export MAKEFILES_TYPE='CodeBlocks - Unix Makefiles'

if [ $CLEANROOT == 1 ]
then
    rm -Rf $MYROOT
fi
mkdir -p $MYROOT

if [ ! -d "build" ]
then
    mkdir build
fi
cd build

cmake -G "$MAKEFILES_TYPE" . -DCMAKE_BUILD_TYPE=debugfull -DCMAKE_INSTALL_PREFIX=$MYROOT/ -DKDE4_BUILD_TESTS=on -DDIGIKAMSC_USE_PRIVATE_KDEGRAPHICS:BOOL=1 -Wno-dev ..
